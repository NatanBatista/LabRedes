node n1 {
    type router
    model host
    network-config {
	hostname n1servidor
	!
	interface eth1
	 ip address 192.0.3.10/24
	 ipv6 address 2001:db8:1::10/64
	!
    }
    canvas c1
    iconcoords {162.0 98.0}
    labelcoords {162.0 130.0}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('Natan.html', )
	cmdup=('python -m SimpleHTTPServer 80', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:Natan.html
	custom-command Natan.html
	config {
	<!DOCTYPE html>
	<html>
		<head>
			<title> NatanCloud </title>
		</head>
	<body> Natan Cloud </body>
	</html>
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 192.0.2.1/24
	 ipv6 address 2001:db8:0::1/64
	!
	interface eth0
	 ip address 192.0.3.1/24
	 ipv6 address 2001:db8:1::1/64
	!
    }
    canvas c1
    iconcoords {348.0 288.0}
    labelcoords {348.0 320.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n2}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 192.0.2.20/24
	 ipv6 address 2001:db8:0::20/64
	!
    }
    canvas c1
    iconcoords {519.0 106.0}
    labelcoords {519.0 138.0}
    interface-peer {eth0 n3}
}

link l2 {
    nodes {n1 n3}
    bandwidth 0
}

link l1 {
    nodes {n2 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

